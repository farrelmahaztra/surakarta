version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    restart: always

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    restart: always

  frontend:
    build:
      context: ./web/frontend
      dockerfile: ../../docker/frontend/Dockerfile
    volumes:
      - frontend_build:/app/dist
    depends_on:
      - backend
    restart: always

  nginx:
    build:
      context: ./docker/nginx
    volumes:
      - static_volume:/var/www/staticfiles
      - media_volume:/var/www/media
      - frontend_build:/var/www/frontend
      - /etc/letsencrypt/live/surakartagame.com:/etc/nginx/certs
      - /etc/letsencrypt/archive/surakartagame.com:/etc/nginx/archive
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/nginx/options-ssl-nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_build: